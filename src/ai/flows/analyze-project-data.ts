// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Implements an AI chatbot for analyzing project data based on user queries.
 *
 * - analyzeProjectData - A function that accepts a project data analysis request and returns an AI-generated analysis.
 * - AnalyzeProjectDataInput - The input type for the analyzeProjectData function.
 * - AnalyzeProjectDataOutput - The return type for the analyzeProjectData function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeProjectDataInputSchema = z.object({
  projectId: z.string().describe('The ID of the project to analyze.'),
  query: z.string().describe('The specific question or analysis request from the user.'),
  data: z.string().optional().describe('The JSON data related to project'),
});
export type AnalyzeProjectDataInput = z.infer<typeof AnalyzeProjectDataInputSchema>;

const AnalyzeProjectDataOutputSchema = z.object({
  analysis: z.string().describe('The AI-generated analysis of the project data based on the user query.'),
});
export type AnalyzeProjectDataOutput = z.infer<typeof AnalyzeProjectDataOutputSchema>;

export async function analyzeProjectData(input: AnalyzeProjectDataInput): Promise<AnalyzeProjectDataOutput> {
  return analyzeProjectDataFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeProjectDataPrompt',
  input: {schema: AnalyzeProjectDataInputSchema},
  output: {schema: AnalyzeProjectDataOutputSchema},
  prompt: `You are an AI chatbot specialized in analyzing web analytics data for projects.

  A user has asked the following question about their project data: {{{query}}}
  
  Here is the project's data: {{{data}}}

  Provide a concise and insightful analysis of the data, directly addressing the user's query. Focus on actionable insights and recommendations.
  `,
});

const analyzeProjectDataFlow = ai.defineFlow(
  {
    name: 'analyzeProjectDataFlow',
    inputSchema: AnalyzeProjectDataInputSchema,
    outputSchema: AnalyzeProjectDataOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
